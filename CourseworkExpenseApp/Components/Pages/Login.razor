@page "/login"
@using CourseworkExpenseApp.Models
@using CourseworkExpenseApp.Services
@inject IUserService userService
@inject NavigationManager navigationManager
@inject AuthenticationStateService authStateService
@using System.Diagnostics;


@* Register Form *@
<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="card shadow-sm" style="width: 400px;">
        <div class="card-body p-4">
            <h3 class="text-center mb-4 fw-bold">LOGIN</h3>

            <!-- Username Field -->
            <div class="mb-8">
                <label for="username" class="form-label fw-bold">Username</label>
                <input type="text" id="username" class="form-control" placeholder="Enter your username" @bind="username" />
            </div>

            <!-- Password Field -->
            <div class="mb-8">
                <label for="password" class="form-label fw-bold">Password</label>
                <input type="password" id="password" class="form-control" placeholder="Enter your password" @bind="password" />
            </div>

            <!-- Submit Button -->
            <div class="d-flex justify-content-center align-items-center">
                <button type="submit" @onclick="LoginUser" class="btn btn-primary fw-semibold px-7 py-3" style="background-color: #594AE2; border: none;">
                    Submit
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task LoginUser()
    {
        try
        {
            var users = await userService.LoadUsersAsync();
            Debug.WriteLine($"users: {string.Join(", ", users.Select(u => u.UserName))}");

            var user = users.FirstOrDefault(u => u.UserName == username && u.Password == HashPassword(password));

            if (user != null)
            {
                // Set the authenticated user in state management
                authStateService.SetAuthenticatedUser(user);

                // Redirect to the dashboard or todo page
                navigationManager.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred during login: {ex.Message}";
        }
    }

    private string HashPassword(string password)
    {
        using (var sha256 = System.Security.Cryptography.SHA256.Create())
        {
            var bytes = System.Text.Encoding.UTF8.GetBytes(password);
            var hash = sha256.ComputeHash(bytes);
            return Convert.ToBase64String(hash);
        }
    }
}
